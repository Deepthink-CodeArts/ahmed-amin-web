version: '3.8'

# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  postgres:
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups:ro
    environment:
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=1000
      - POSTGRES_MAX_CONNECTIONS=200
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB

  backend:
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    environment:
      - ENVIRONMENT=production
      - UVICORN_WORKERS=4
      - UVICORN_ACCESS_LOG=true
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
    ports:
      - "127.0.0.1:8000:8000"  # Bind to localhost only
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    ports:
      - "127.0.0.1:3000:80"  # Bind to localhost only
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "3"

  nginx:
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - backend_uploads:/var/www/uploads:ro
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/deepbase/data/postgres
  backend_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/deepbase/data/uploads 